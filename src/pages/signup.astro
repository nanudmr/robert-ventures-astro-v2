---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
---

<!doctype html>
<html lang="en">



<head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
</head>

<style>

    main{
        padding: 1.5rem;
    }

    h1 {
        color: #000;
        text-align: center;
        font-family: "Satoshi", sans-serif;
        font-size: 1.4375rem;
        font-style: normal;
        font-weight: 700;
        line-height: 130%;
        margin-bottom: 1.5rem;
    }

    form {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    form input {
        padding: 1rem 0.75rem;
        font-size: 1rem;
        line-height: 1;
        font-family: Inter, sans-serif;
        border-radius: 0.75rem;
        border: 1px solid #AFB5BC;
    }

    .group {
        display: flex;
        gap: 0.75rem;
    }

    .group input {
        flex: 1;
        min-width: 0;
    }

    button {
        background-color: #5028FF;
        color: #fff;
        padding: 15px;
        line-height: 1;
        font-family: Inter, sans-serif;
        font-size: 1.125rem;
        font-weight: 500;
        border-radius: 0.75rem;
        border: 1px solid #5028FF;
        margin-top: 0.75rem;
    }

    .disclaimer{
        margin-top: 0.75rem;
        font-family: Inter, sans-serif;
        /* line-height: 1.6; */
        font-size: 14px;
        text-align: center;
    }

    a{
        color: #505050;
        text-decoration: underline;
        white-space: nowrap;
        font-weight: 500;
    }

</style>

<body>
    <Header />

    <main>
        <h1>Open Your Account in Under 3 Minutes</h1>

        <form id="signup-form" action="/api/signup" method="post">

            <div class="group">
                <input type="text" name="first_name" placeholder="First Name" required />
                <input type="text" name="last_name" placeholder="Last Name" required />
            </div>
            <input type="email" name="email" placeholder="Email" required />
            <input type="password" name="password" placeholder="Password" required />

            <!-- <select name="how_did_they_hear">
                    <option selected hidden value="null">Select one</option>
                    <option value="facebook">Facebook</option>
                    <option value="instagram">Instagram</option>
                    <option value="friend">Friend</option>
                    <option value="newsletter">Newsletter</option>
                    <option value="google">Google</option>
                </select> -->
            <button type="submit">Sign Up</button>
        </form>
        <p class="disclaimer">By continuing, you agree to our <a href="">Privacy Policy</a> and <a href="">Terms of Use</a></p>
    </main>
    <!-- <Footer /> -->
</body>

</html>

<script is:inline>
    async function authenticateWithWealthBlock(formData) {
        try {
            const response = await fetch("/api/wealthblock", {
                method: "POST",
                body: formData,
            });

            const textData = await response.text();
            console.log("üîç WealthBlock Raw Response:", textData);

            if (!response.ok) {
                console.error("‚ùå WealthBlock API Error:", textData);
                return null;
            }

            try {
                const jsonData = JSON.parse(textData);
                console.log("‚úÖ WealthBlock Parsed JSON:", jsonData);
                return jsonData;
            } catch (parseError) {
                console.warn("‚ö† WealthBlock returned a non-JSON response. Ignoring parsing error.");
                return textData;
            }
        } catch (error) {
            console.error("‚ùå Error during WealthBlock authentication:", error);
            return null;
        }
    }

    document.getElementById("signup-form").addEventListener("submit", async (e) => {
        e.preventDefault();

        const form = e.target;
        const formData = new FormData(form);

        try {
            /*
            // ‚úÖ Temporarily disabled WealthBlock authentication for testing
            const wealthBlockAuth = await authenticateWithWealthBlock(formData);
            
            if (!wealthBlockAuth) {
                alert("Authentication with WealthBlock failed. Please try again.");
                return;
            }
            */

            // ‚úÖ Attempt to fetch the IP address but do not block signup if it fails
            try {
                const ipResponse = await fetch("https://api64.ipify.org?format=json");
                if (ipResponse.ok) {
                    const ipData = await ipResponse.json();
                    formData.append("ip_address", ipData.ip);
                    console.log("‚úÖ IP Address Added:", ipData.ip);
                } else {
                    console.warn("‚ö† Failed to fetch IP address. Continuing signup...");
                }
            } catch (err) {
                console.warn("‚ö† Error fetching IP address. Skipping...");
            }

            // ‚úÖ Submit form data to backend
            const response = await fetch(form.action, {
                method: form.method,
                body: formData,
            });

            const result = await response.json();

            if (!response.ok) {
                alert(`Signup failed: ${result.error}`);
                return;
            }

            if (result.session) {
                localStorage.setItem("supabase_token", result.session.access_token);
            }

            // ‚úÖ Ensure GoHighLevel Contact ID is stored in localStorage
            if (result.ghl_id) {
                localStorage.setItem("ghl_contact_id", result.ghl_id);
                console.log("‚úÖ Stored GHL Contact ID:", result.ghl_id);
            } else {
                console.warn("‚ö† No GoHighLevel Contact ID received!");
            }

            alert("Signup successful!");
            window.location.href = "/signup-step-2"; // Proceed to next step
        } catch (err) {
            console.error("‚ùå Error during signup:", err);
            alert("An unexpected error occurred.");
        }
    });
</script>