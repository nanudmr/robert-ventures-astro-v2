import { c as createComponent, r as renderTemplate, a as renderComponent, b as renderHead } from '../chunks/astro/server_DX3Ct7Tn.mjs';
import 'kleur/colors';
import { a as $$Header, $ as $$BaseHead } from '../chunks/Header_Cq4rgWWE.mjs';
import { S as SITE_DESCRIPTION, a as SITE_TITLE } from '../chunks/consts_DaG9i4bq.mjs';
/* empty css                                  */
export { renderers } from '../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Signup = createComponent(async ($$result, $$props, $$slots) => {
  return renderTemplate(_a || (_a = __template(['<html lang="en" data-astro-cid-sgjovbj7> <head>', "", "</head> <body data-astro-cid-sgjovbj7> ", ' <main data-astro-cid-sgjovbj7> <h1 data-astro-cid-sgjovbj7>Open Your Account in Under 3 Minutes</h1> <form id="signup-form" action="/api/signup" method="post" data-astro-cid-sgjovbj7> <div class="group" data-astro-cid-sgjovbj7> <input type="text" name="first_name" placeholder="First Name" required data-astro-cid-sgjovbj7> <input type="text" name="last_name" placeholder="Last Name" required data-astro-cid-sgjovbj7> </div> <input type="email" name="email" placeholder="Email" required data-astro-cid-sgjovbj7> <input type="password" name="password" placeholder="Password" required data-astro-cid-sgjovbj7> <!-- <select name="how_did_they_hear">\n                    <option selected hidden value="null">Select one</option>\n                    <option value="facebook">Facebook</option>\n                    <option value="instagram">Instagram</option>\n                    <option value="friend">Friend</option>\n                    <option value="newsletter">Newsletter</option>\n                    <option value="google">Google</option>\n                </select> --> <button type="submit" data-astro-cid-sgjovbj7>Sign Up</button> </form> <p class="disclaimer" data-astro-cid-sgjovbj7>By continuing, you agree to our <a href="" data-astro-cid-sgjovbj7>Privacy Policy</a> and <a href="" data-astro-cid-sgjovbj7>Terms of Use</a></p> </main> <!-- <Footer /> --> <script>\n    async function authenticateWithWealthBlock(formData) {\n        try {\n            const response = await fetch("/api/wealthblock", {\n                method: "POST",\n                body: formData,\n            });\n\n            const textData = await response.text();\n            console.log("\u{1F50D} WealthBlock Raw Response:", textData);\n\n            if (!response.ok) {\n                console.error("\u274C WealthBlock API Error:", textData);\n                return null;\n            }\n\n            try {\n                const jsonData = JSON.parse(textData);\n                console.log("\u2705 WealthBlock Parsed JSON:", jsonData);\n                return jsonData;\n            } catch (parseError) {\n                console.warn("\u26A0 WealthBlock returned a non-JSON response. Ignoring parsing error.");\n                return textData;\n            }\n        } catch (error) {\n            console.error("\u274C Error during WealthBlock authentication:", error);\n            return null;\n        }\n    }\n\n    document.getElementById("signup-form").addEventListener("submit", async (e) => {\n        e.preventDefault();\n\n        const form = e.target;\n        const formData = new FormData(form);\n        const password = form.password.value.trim(); // \u2705 Ensure correct password retrieval\n\n        // \u2705 Validate password for at least one special character before making API calls\n        const specialCharRegex = /[!@#$%^&*(),.?":{}|<>]/;\n        if (!specialCharRegex.test(password)) {\n            alert("Password must contain at least one special character.");\n            return;\n        }\n\n        try {\n            /*\n            // \u2705 Temporarily disabled WealthBlock authentication for testing\n            const wealthBlockAuth = await authenticateWithWealthBlock(formData);\n            \n            if (!wealthBlockAuth) {\n                alert("Authentication with WealthBlock failed. Please try again.");\n                return;\n            }\n            */\n\n            // \u2705 Attempt to fetch the IP address but do not block signup if it fails\n            try {\n                const ipResponse = await fetch("https://api64.ipify.org?format=json");\n                if (ipResponse.ok) {\n                    const ipData = await ipResponse.json();\n                    formData.append("ip_address", ipData.ip);\n                    console.log("\u2705 IP Address Added:", ipData.ip);\n                } else {\n                    console.warn("\u26A0 Failed to fetch IP address. Continuing signup...");\n                }\n            } catch (err) {\n                console.warn("\u26A0 Error fetching IP address. Skipping...");\n            }\n\n            // \u2705 Submit form data to backend\n            const response = await fetch(form.action, {\n                method: form.method,\n                body: formData,\n            });\n\n            const result = await response.json();\n\n            if (!response.ok) {\n                alert(`Signup failed: ${result.error}`);\n                return;\n            }\n\n            if (result.session) {\n                localStorage.setItem("supabase_token", result.session.access_token);\n            }\n\n            // \u2705 Ensure GoHighLevel Contact ID is stored in localStorage\n            if (result.ghl_id) {\n                localStorage.setItem("ghl_contact_id", result.ghl_id);\n                console.log("\u2705 Stored GHL Contact ID:", result.ghl_id);\n            } else {\n                console.warn("\u26A0 No GoHighLevel Contact ID received!");\n            }\n\n            alert("Signup successful!");\n            window.location.href = "/signup-step-2"; // Proceed to next step\n        } catch (err) {\n            console.error("\u274C Error during signup:", err);\n            alert("An unexpected error occurred.");\n        }\n    });\n<\/script></body></html>'], ['<html lang="en" data-astro-cid-sgjovbj7> <head>', "", "</head> <body data-astro-cid-sgjovbj7> ", ' <main data-astro-cid-sgjovbj7> <h1 data-astro-cid-sgjovbj7>Open Your Account in Under 3 Minutes</h1> <form id="signup-form" action="/api/signup" method="post" data-astro-cid-sgjovbj7> <div class="group" data-astro-cid-sgjovbj7> <input type="text" name="first_name" placeholder="First Name" required data-astro-cid-sgjovbj7> <input type="text" name="last_name" placeholder="Last Name" required data-astro-cid-sgjovbj7> </div> <input type="email" name="email" placeholder="Email" required data-astro-cid-sgjovbj7> <input type="password" name="password" placeholder="Password" required data-astro-cid-sgjovbj7> <!-- <select name="how_did_they_hear">\n                    <option selected hidden value="null">Select one</option>\n                    <option value="facebook">Facebook</option>\n                    <option value="instagram">Instagram</option>\n                    <option value="friend">Friend</option>\n                    <option value="newsletter">Newsletter</option>\n                    <option value="google">Google</option>\n                </select> --> <button type="submit" data-astro-cid-sgjovbj7>Sign Up</button> </form> <p class="disclaimer" data-astro-cid-sgjovbj7>By continuing, you agree to our <a href="" data-astro-cid-sgjovbj7>Privacy Policy</a> and <a href="" data-astro-cid-sgjovbj7>Terms of Use</a></p> </main> <!-- <Footer /> --> <script>\n    async function authenticateWithWealthBlock(formData) {\n        try {\n            const response = await fetch("/api/wealthblock", {\n                method: "POST",\n                body: formData,\n            });\n\n            const textData = await response.text();\n            console.log("\u{1F50D} WealthBlock Raw Response:", textData);\n\n            if (!response.ok) {\n                console.error("\u274C WealthBlock API Error:", textData);\n                return null;\n            }\n\n            try {\n                const jsonData = JSON.parse(textData);\n                console.log("\u2705 WealthBlock Parsed JSON:", jsonData);\n                return jsonData;\n            } catch (parseError) {\n                console.warn("\u26A0 WealthBlock returned a non-JSON response. Ignoring parsing error.");\n                return textData;\n            }\n        } catch (error) {\n            console.error("\u274C Error during WealthBlock authentication:", error);\n            return null;\n        }\n    }\n\n    document.getElementById("signup-form").addEventListener("submit", async (e) => {\n        e.preventDefault();\n\n        const form = e.target;\n        const formData = new FormData(form);\n        const password = form.password.value.trim(); // \u2705 Ensure correct password retrieval\n\n        // \u2705 Validate password for at least one special character before making API calls\n        const specialCharRegex = /[!@#$%^&*(),.?":{}|<>]/;\n        if (!specialCharRegex.test(password)) {\n            alert("Password must contain at least one special character.");\n            return;\n        }\n\n        try {\n            /*\n            // \u2705 Temporarily disabled WealthBlock authentication for testing\n            const wealthBlockAuth = await authenticateWithWealthBlock(formData);\n            \n            if (!wealthBlockAuth) {\n                alert("Authentication with WealthBlock failed. Please try again.");\n                return;\n            }\n            */\n\n            // \u2705 Attempt to fetch the IP address but do not block signup if it fails\n            try {\n                const ipResponse = await fetch("https://api64.ipify.org?format=json");\n                if (ipResponse.ok) {\n                    const ipData = await ipResponse.json();\n                    formData.append("ip_address", ipData.ip);\n                    console.log("\u2705 IP Address Added:", ipData.ip);\n                } else {\n                    console.warn("\u26A0 Failed to fetch IP address. Continuing signup...");\n                }\n            } catch (err) {\n                console.warn("\u26A0 Error fetching IP address. Skipping...");\n            }\n\n            // \u2705 Submit form data to backend\n            const response = await fetch(form.action, {\n                method: form.method,\n                body: formData,\n            });\n\n            const result = await response.json();\n\n            if (!response.ok) {\n                alert(\\`Signup failed: \\${result.error}\\`);\n                return;\n            }\n\n            if (result.session) {\n                localStorage.setItem("supabase_token", result.session.access_token);\n            }\n\n            // \u2705 Ensure GoHighLevel Contact ID is stored in localStorage\n            if (result.ghl_id) {\n                localStorage.setItem("ghl_contact_id", result.ghl_id);\n                console.log("\u2705 Stored GHL Contact ID:", result.ghl_id);\n            } else {\n                console.warn("\u26A0 No GoHighLevel Contact ID received!");\n            }\n\n            alert("Signup successful!");\n            window.location.href = "/signup-step-2"; // Proceed to next step\n        } catch (err) {\n            console.error("\u274C Error during signup:", err);\n            alert("An unexpected error occurred.");\n        }\n    });\n<\/script></body></html>'])), renderComponent($$result, "BaseHead", $$BaseHead, { "title": SITE_TITLE, "description": SITE_DESCRIPTION, "data-astro-cid-sgjovbj7": true }), renderHead(), renderComponent($$result, "Header", $$Header, { "data-astro-cid-sgjovbj7": true }));
}, "/Users/eduardodematos/Documents/GitHub/robert-ventures-astro/src/pages/signup.astro", void 0);

const $$file = "/Users/eduardodematos/Documents/GitHub/robert-ventures-astro/src/pages/signup.astro";
const $$url = "/signup";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
    __proto__: null,
    default: $$Signup,
    file: $$file,
    url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
